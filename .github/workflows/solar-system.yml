name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME:  superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container:
          image: 'node:20'
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
        
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
            path: ~/.npm

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    code-coverage:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
        - name: Install Dependencies
          run: npm install
        - name: Code Coverage
          continue-on-error: true
          run: npm run coverage
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5
    docker:
      permissions:
        packages: write
      runs-on: ubuntu-latest
      needs: [unit-testing,code-coverage]
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: Docker login
          uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: '${{ github.repository_owner }}'
            password: '${{ secrets.GITHUB_TOKEN }}'
        - name: docker build push
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}'


    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      environment:
        name: development
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: setup kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: v1.26.0
        - name: set kubeconfig 
          uses: azure/k8s-set-context@v3
          with:
            method: kubeconfig
            kubeconfig: '${{ secrets.KUBECONFIG }}'
        - name: version kubectl
          run: kubectl version --short -o yaml
       

      
